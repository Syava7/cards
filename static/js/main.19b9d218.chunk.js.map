{"version":3,"sources":["1-main/1-ui/components/Profile/Profile.tsx","1-main/1-ui/components/Login/Login.tsx","1-main/1-ui/components/Registration/Registration.tsx","1-main/1-ui/components/RecoveryPassword/RecoveryPassword.tsx","1-main/1-ui/components/NewPassword/NewPassword.tsx","1-main/1-ui/App.tsx","reportWebVitals.ts","1-main/2-bll/reducers/loginReducer.ts","1-main/2-bll/reducers/profileReducer.ts","1-main/2-bll/reducers/registerReducer.ts","1-main/2-bll/reducers/newPasswordReducer.ts","1-main/2-bll/reducers/recoveryPasswordReducer.ts","1-main/2-bll/store.ts","index.tsx"],"names":["Profile","props","Login","Registration","RecoveryPassword","NewPassword","App","className","exact","path","render","to","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","combineReducers","auth","state","action","type","profile","register","newPassword","recovery","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"6OAOaA,EAAsC,SAAAC,GACjD,OACE,8BACE,iDCHOC,EAAkC,SAAAD,GAC7C,OACE,8BACE,+CCHOE,EAAgD,SAAAF,GAC3D,OACE,8BACE,sDCHOG,EAAoD,SAAAH,GAC/D,OACE,8BACE,0DCHOI,EAA0C,SAAAJ,GACrD,OACE,8BACE,sDCsBSK,EAtBH,WACV,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAI,gBACpD,cAAC,IAAD,CAAOF,KAAM,WAAYC,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOD,KAAM,SAAUC,OAAQ,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAM,gBAAiBC,OAAQ,kBAAM,cAAC,EAAD,OAC5C,cAAC,IAAD,CAAOD,KAAM,YAAaC,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOD,KAAM,gBAAiBC,OAAQ,kBAAM,cAAC,EAAD,OAC5C,cAAC,IAAD,CAAOD,KAAM,OAAQC,OAAQ,kBAAM,wDACnC,cAAC,IAAD,CAAUE,KAAM,IAAKD,GAAI,cAG7B,iCCXSE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCTRQ,EAAY,GCAZA,EAAY,GCAZA,EAAY,GCAZA,EAAY,GCAZA,EAAY,G,QCSZC,EAAcC,YAAgB,CAClCC,KLJyB,WAAuD,IAAtDC,EAAqD,uDAA7CJ,EAAWK,EAAkC,uCAC/E,OAAQA,EAAOC,MACb,IAAK,GACH,MAAO,GAMT,QAAS,OAAOF,IKJlBG,QJL4B,WAAuD,IAAtDH,EAAqD,uDAA7CJ,EAAWK,EAAkC,uCAClF,OAAQA,EAAOC,MACb,IAAK,GACH,MAAO,GAMT,QAAS,OAAOF,IIHlBI,SHN6B,WAAuD,IAAtDJ,EAAqD,uDAA7CJ,EAAWK,EAAkC,uCACnF,OAAQA,EAAOC,MACb,IAAK,GACH,MAAO,GAMT,QAAS,OAAOF,IGFlBK,YFPgC,WAAuD,IAAtDL,EAAqD,uDAA7CJ,EAAWK,EAAkC,uCACtF,OAAQA,EAAOC,MACb,IAAK,GACH,MAAO,GAMT,QAAS,OAAOF,IEDlBM,SDRqC,WAAuD,IAAtDN,EAAqD,uDAA7CJ,EAAWK,EAAkC,uCAC3F,OAAQA,EAAOC,MACb,IAAK,GACH,MAAO,GAMT,QAAS,OAAOF,MCILO,EAFDC,YAAYX,EAAaY,YAAgBC,MCTvDC,IAAS3B,OACP,cAAC,IAAM4B,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1B3B,M","file":"static/js/main.19b9d218.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\ntype ProfilePropsType = {\r\n\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Profile page</h2>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\n\r\ntype LoginPropsType = {\r\n\r\n}\r\n\r\nexport const Login: React.FC<LoginPropsType> = props => {\r\n  return (\r\n    <div >\r\n      <h2>Login page</h2>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\n\r\ntype RegistrationPropsType = {\r\n\r\n}\r\n\r\nexport const Registration: React.FC<RegistrationPropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Registration page</h2>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\n\r\ntype RecoveryPassPropsType = {\r\n\r\n}\r\n\r\nexport const RecoveryPassword: React.FC<RecoveryPassPropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>Restore Password page</h2>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\n\r\n\r\ntype NewPassPropsType = {\r\n\r\n}\r\n\r\nexport const NewPassword: React.FC<NewPassPropsType> = props => {\r\n  return (\r\n    <div>\r\n      <h2>New Password page</h2>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {Profile} from './components/Profile/Profile';\nimport { Login } from './components/Login/Login';\nimport {Registration} from './components/Registration/Registration';\nimport {RecoveryPassword} from './components/RecoveryPassword/RecoveryPassword';\nimport {NewPassword} from './components/NewPassword/NewPassword';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={'/'} render={() => <Redirect to={'/profile'}/>}/>\n          <Route path={\"/profile\"} render={() => <Profile/>}/>\n          <Route path={\"/login\"} render={() => <Login/>}/>\n          <Route path={\"/registration\"} render={() => <Registration/>}/>\n          <Route path={\"/recovery\"} render={() => <RecoveryPassword/>}/>\n          <Route path={\"/new-password\"} render={() => <NewPassword/>}/>\n          <Route path={\"/404\"} render={() => <h1>404: page not found</h1>}/>\n          <Redirect from={\"*\"} to={\"/404\"}/>\n        </Switch>\n      </BrowserRouter>\n      <>\n        {/*<Main>*/}\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\r\n\r\n};\r\n\r\n\r\n\r\nexport const authReducer = (state = initState, action: any): typeof initState => {\r\n  switch (action.type) {\r\n    case '' : {\r\n      return {\r\n\r\n      }\r\n    }\r\n\r\n\r\n    default: return state;\r\n  }\r\n};","const initState = {\r\n\r\n};\r\n\r\n\r\n\r\nexport const profileReducer = (state = initState, action: any): typeof initState => {\r\n  switch (action.type) {\r\n    case '' : {\r\n      return {\r\n\r\n      }\r\n    }\r\n\r\n\r\n    default: return state;\r\n  }\r\n};","const initState = {\r\n\r\n};\r\n\r\n\r\n\r\nexport const registerReducer = (state = initState, action: any): typeof initState => {\r\n  switch (action.type) {\r\n    case '' : {\r\n      return {\r\n\r\n      }\r\n    }\r\n\r\n\r\n    default: return state;\r\n  }\r\n};","const initState = {\r\n\r\n};\r\n\r\n\r\n\r\nexport const newPasswordReducer = (state = initState, action: any): typeof initState => {\r\n  switch (action.type) {\r\n    case '' : {\r\n      return {\r\n\r\n      }\r\n    }\r\n\r\n\r\n    default: return state;\r\n  }\r\n};","const initState = {\r\n\r\n};\r\n\r\n\r\n\r\nexport const recoveryPasswordReducer = (state = initState, action: any): typeof initState => {\r\n  switch (action.type) {\r\n    case '' : {\r\n      return {\r\n\r\n      }\r\n    }\r\n\r\n\r\n    default: return state;\r\n  }\r\n};","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {authReducer} from './reducers/loginReducer';\r\nimport {profileReducer} from './reducers/profileReducer';\r\nimport {registerReducer} from './reducers/registerReducer';\r\nimport {newPasswordReducer} from './reducers/newPasswordReducer';\r\nimport {recoveryPasswordReducer} from './reducers/recoveryPasswordReducer';\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  profile: profileReducer,\r\n  register: registerReducer,\r\n  newPassword: newPasswordReducer,\r\n  recovery: recoveryPasswordReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './1-main/1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './1-main/2-bll/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}